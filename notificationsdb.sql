CREATE TABLE notification_states (
    notification_state_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(45) NOT NULL UNIQUE
);

CREATE TABLE notification_types (
    notification_type_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(255) NOT NULL UNIQUE
);

CREATE TABLE notifications (
    notification_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    message VARCHAR(255),
    notification_date TIMESTAMP WITH TIME ZONE NOT NULL,
    entity_id INTEGER,
    notification_type_id INTEGER NOT NULL,
    notification_state_id INTEGER NOT NULL
);

CREATE TABLE user_devices (
    user_device_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id INTEGER NOT NULL,
    fcm_token VARCHAR(255) NOT NULL,
    UNIQUE (user_id, fcm_token)
);

CREATE TABLE notification_devices (
    notification_device_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    notification_id  INTEGER NOT NULL,
    user_device_id   INTEGER NOT NULL,
    UNIQUE (notification_id, user_device_id)
);

ALTER TABLE notifications
    ADD CONSTRAINT fk_notifications_notification_type_id FOREIGN KEY (notification_type_id) REFERENCES notification_types(notification_type_id) ON DELETE CASCADE;

ALTER TABLE notifications
    ADD CONSTRAINT fk_notifications_notification_state_id FOREIGN KEY (notification_state_id) REFERENCES notification_states(notification_state_id);

ALTER TABLE notification_devices
    ADD CONSTRAINT fk_notification_devices_notification_id FOREIGN KEY (notification_id) REFERENCES notifications(notification_id) ON DELETE CASCADE;

ALTER TABLE notification_devices
    ADD CONSTRAINT fk_notification_devices_user_device_id FOREIGN KEY (user_device_id) REFERENCES user_devices(user_device_id) ON DELETE CASCADE;