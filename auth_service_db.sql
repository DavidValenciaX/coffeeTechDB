-- BASIC CONFIGURATION
SET client_encoding = 'UTF8';

-- EXTENSIONS
CREATE EXTENSION pg_stat_statements;

BEGIN;

-- TABLES
CREATE TABLE users (
    user_id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(150) NOT NULL UNIQUE,
    password_hash VARCHAR(255) NOT NULL,
    verification_token VARCHAR(255),
    session_token VARCHAR(255),
    status_id integer NOT NULL,
    fcm_token VARCHAR(255)
);

CREATE TABLE permission (
    permission_id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    description VARCHAR(200) NOT NULL,
    name VARCHAR(255) UNIQUE
);

CREATE TABLE role (
    role_id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(255) NOT NULL UNIQUE
);

CREATE TABLE role_permission (
    role_id integer NOT NULL,
    permission_id integer NOT NULL,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE status_type (
    status_type_id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);

CREATE TABLE status (
    status_id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(45) NOT NULL,
    status_type_id integer NOT NULL
);

-- FOREIGN KEYS
ALTER TABLE role_permission
    ADD CONSTRAINT fk_role_permission_permission_id FOREIGN KEY (permission_id) REFERENCES permission(permission_id) ON DELETE CASCADE;

ALTER TABLE role_permission
    ADD CONSTRAINT fk_role_permission_role_id FOREIGN KEY (role_id) REFERENCES role(role_id) ON DELETE CASCADE;

ALTER TABLE status
    ADD CONSTRAINT fk_status_status_type_id FOREIGN KEY (status_type_id) REFERENCES status_type(status_type_id);

ALTER TABLE users
    ADD CONSTRAINT fk_users_status_id FOREIGN KEY (status_id) REFERENCES status(status_id);

COMMIT;